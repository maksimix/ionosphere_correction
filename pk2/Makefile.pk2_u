#############################################################################
# Makefile for building: pk2
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Thu Nov 26 22:21:21 2009
# Project:  pk2_u.pro
# Template: app
# Command: $(QMAKE) -o Makefile.pk2_u pk2_u.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DUSE_LIB64_PATHES -fno-strict-aliasing -Wall -W -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DUSE_LIB64_PATHES -fno-strict-aliasing -Wall -W -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt3/mkspecs/linux-g++-64 -I. -I/usr/include -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/lib64/ -L$(QTDIR)/lib64/ -L/usr/X11R6/lib64/ ../iri_3d/iri2007/libiri2007.a -lgfortran -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = obj/

####### Files

HEADERS = paths.h \
		../splayn/spcub.h \
		../iri_3d/iri_3d_new.h
SOURCES = path0s.cpp \
		main__.c \
		pk2_modul.cpp \
		coords.cpp \
		coors.cpp \
		funcs.cpp \
		infils.cpp \
		inions.cpp \
		ionos.cpp \
		ltv.cpp \
		magfis.cpp \
		outtrs.cpp \
		soluts.cpp \
		sopr.cpp \
		moda.cpp \
		treks.cpp \
		prion.cpp \
		extern.cpp \
		../iri_3d/iri_3d_new.cpp \
		../iri_3d/eschar.cpp \
		../splayn/spcub.cpp \
		../splayn/progon.cpp
OBJECTS = obj/path0s.o \
		obj/main__.o \
		obj/pk2_modul.o \
		obj/coords.o \
		obj/coors.o \
		obj/funcs.o \
		obj/infils.o \
		obj/inions.o \
		obj/ionos.o \
		obj/ltv.o \
		obj/magfis.o \
		obj/outtrs.o \
		obj/soluts.o \
		obj/sopr.o \
		obj/moda.o \
		obj/treks.o \
		obj/prion.o \
		obj/extern.o \
		obj/iri_3d_new.o \
		obj/eschar.o \
		obj/spcub.o \
		obj/progon.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = pk2_u.pro
QMAKE_TARGET = pk2
DESTDIR  = 
TARGET   = pk2

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile.pk2_u $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile.pk2_u: pk2_u.pro  /usr/lib/qt3/mkspecs/linux-g++-64/qmake.conf /usr/lib/qt3/lib64/libqt-mt.prl
	$(QMAKE) -o Makefile.pk2_u pk2_u.pro
qmake: 
	@$(QMAKE) -o Makefile.pk2_u pk2_u.pro

dist: 
	@mkdir -p obj/pk2 && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) obj/pk2/ && ( cd `dirname obj/pk2` && $(TAR) pk2.tar pk2 && $(GZIP) pk2.tar ) && $(MOVE) `dirname obj/pk2`/pk2.tar.gz . && $(DEL_FILE) -r obj/pk2

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

obj/path0s.o: path0s.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/path0s.o path0s.cpp

obj/main__.o: main__.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o obj/main__.o main__.c

obj/pk2_modul.o: pk2_modul.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/pk2_modul.o pk2_modul.cpp

obj/coords.o: coords.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/coords.o coords.cpp

obj/coors.o: coors.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/coors.o coors.cpp

obj/funcs.o: funcs.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/funcs.o funcs.cpp

obj/infils.o: infils.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/infils.o infils.cpp

obj/inions.o: inions.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/inions.o inions.cpp

obj/ionos.o: ionos.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ionos.o ionos.cpp

obj/ltv.o: ltv.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ltv.o ltv.cpp

obj/magfis.o: magfis.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/magfis.o magfis.cpp

obj/outtrs.o: outtrs.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/outtrs.o outtrs.cpp

obj/soluts.o: soluts.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/soluts.o soluts.cpp

obj/sopr.o: sopr.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/sopr.o sopr.cpp

obj/moda.o: moda.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moda.o moda.cpp

obj/treks.o: treks.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/treks.o treks.cpp

obj/prion.o: prion.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/prion.o prion.cpp

obj/extern.o: extern.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/extern.o extern.cpp

obj/iri_3d_new.o: ../iri_3d/iri_3d_new.cpp ../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/iri_3d_new.o ../iri_3d/iri_3d_new.cpp

obj/eschar.o: ../iri_3d/eschar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/eschar.o ../iri_3d/eschar.cpp

obj/spcub.o: ../splayn/spcub.cpp ../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/spcub.o ../splayn/spcub.cpp

obj/progon.o: ../splayn/progon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/progon.o ../splayn/progon.cpp

####### Install

install:  

uninstall:  

