#############################################################################
# Makefile for building: paths
# Generated by qmake (2.01a) (Qt 4.8.4) on: ?? ??? 8 19:48:10 2014
# Project:  paths_u.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile paths_u.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib64 ../iri2012/libiri2012.a -lgfortran -lQtGui -L/usr/lib64 -L/usr/X11R6/lib64 -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = paths.cpp \
		coords.cpp \
		coors.cpp \
		funcs.cpp \
		infils.cpp \
		inions.cpp \
		ionos.cpp \
		ltv.cpp \
		magfis.cpp \
		outtrs.cpp \
		soluts.cpp \
		solt.cpp \
		sopr.cpp \
		treks.cpp \
		moda.cpp \
		soltA.cpp \
		ssno.cpp \
		grss.cpp \
		wr_fil.cpp \
		init_fil.cpp \
		shell.cpp \
		prion.cpp \
		mpchs.cpp \
		extern.cpp \
		../antenn/polar.cpp \
		../antenn/trant.cpp \
		../antenn/si.cpp \
		../antenn/resist.cpp \
		../antenn/rerth.cpp \
		../antenn/recant.cpp \
		../antenn/rebeam.cpp \
		../antenn/loop.cpp \
		../antenn/get_ant.cpp \
		../antenn/fm.cpp \
		../antenn/ci.cpp \
		../antenn/ellips.cpp \
		../antenn/dipole.cpp \
		../antenn/bs.cpp \
		../antenn/beam.cpp \
		../iri_3d/eschar.cpp \
		../iri_3d/iri_3d_new.cpp \
		../splayn/spcub.cpp \
		../splayn/progon.cpp 
OBJECTS       = .obj/paths.o \
		.obj/coords.o \
		.obj/coors.o \
		.obj/funcs.o \
		.obj/infils.o \
		.obj/inions.o \
		.obj/ionos.o \
		.obj/ltv.o \
		.obj/magfis.o \
		.obj/outtrs.o \
		.obj/soluts.o \
		.obj/solt.o \
		.obj/sopr.o \
		.obj/treks.o \
		.obj/moda.o \
		.obj/soltA.o \
		.obj/ssno.o \
		.obj/grss.o \
		.obj/wr_fil.o \
		.obj/init_fil.o \
		.obj/shell.o \
		.obj/prion.o \
		.obj/mpchs.o \
		.obj/extern.o \
		.obj/polar.o \
		.obj/trant.o \
		.obj/si.o \
		.obj/resist.o \
		.obj/rerth.o \
		.obj/recant.o \
		.obj/rebeam.o \
		.obj/loop.o \
		.obj/get_ant.o \
		.obj/fm.o \
		.obj/ci.o \
		.obj/ellips.o \
		.obj/dipole.o \
		.obj/bs.o \
		.obj/beam.o \
		.obj/eschar.o \
		.obj/iri_3d_new.o \
		.obj/spcub.o \
		.obj/progon.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		paths_u.pro
QMAKE_TARGET  = paths
DESTDIR       = 
TARGET        = paths

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: paths_u.pro  /usr/share/qt4/mkspecs/default/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl
	$(QMAKE) -o Makefile paths_u.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile paths_u.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/paths1.0.0 || $(MKDIR) .obj/paths1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/paths1.0.0/ && $(COPY_FILE) --parents paths.h ../splayn/spcub.h ../iri_3d/iri_3d_new.h .obj/paths1.0.0/ && $(COPY_FILE) --parents paths.cpp coords.cpp coors.cpp funcs.cpp infils.cpp inions.cpp ionos.cpp ltv.cpp magfis.cpp outtrs.cpp soluts.cpp solt.cpp sopr.cpp treks.cpp moda.cpp soltA.cpp ssno.cpp grss.cpp wr_fil.cpp init_fil.cpp shell.cpp prion.cpp mpchs.cpp extern.cpp ../antenn/polar.cpp ../antenn/trant.cpp ../antenn/si.cpp ../antenn/resist.cpp ../antenn/rerth.cpp ../antenn/recant.cpp ../antenn/rebeam.cpp ../antenn/loop.cpp ../antenn/get_ant.cpp ../antenn/fm.cpp ../antenn/ci.cpp ../antenn/ellips.cpp ../antenn/dipole.cpp ../antenn/bs.cpp ../antenn/beam.cpp ../iri_3d/eschar.cpp ../iri_3d/iri_3d_new.cpp ../splayn/spcub.cpp ../splayn/progon.cpp .obj/paths1.0.0/ && (cd `dirname .obj/paths1.0.0` && $(TAR) paths1.0.0.tar paths1.0.0 && $(COMPRESS) paths1.0.0.tar) && $(MOVE) `dirname .obj/paths1.0.0`/paths1.0.0.tar.gz . && $(DEL_FILE) -r .obj/paths1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

.obj/paths.o: paths.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h \
		../antenn/antenn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/paths.o paths.cpp

.obj/coords.o: coords.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/coords.o coords.cpp

.obj/coors.o: coors.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/coors.o coors.cpp

.obj/funcs.o: funcs.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/funcs.o funcs.cpp

.obj/infils.o: infils.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/infils.o infils.cpp

.obj/inions.o: inions.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/inions.o inions.cpp

.obj/ionos.o: ionos.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ionos.o ionos.cpp

.obj/ltv.o: ltv.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ltv.o ltv.cpp

.obj/magfis.o: magfis.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/magfis.o magfis.cpp

.obj/outtrs.o: outtrs.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/outtrs.o outtrs.cpp

.obj/soluts.o: soluts.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/soluts.o soluts.cpp

.obj/solt.o: solt.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/solt.o solt.cpp

.obj/sopr.o: sopr.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/sopr.o sopr.cpp

.obj/treks.o: treks.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/treks.o treks.cpp

.obj/moda.o: moda.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moda.o moda.cpp

.obj/soltA.o: soltA.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/soltA.o soltA.cpp

.obj/ssno.o: ssno.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ssno.o ssno.cpp

.obj/grss.o: grss.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/grss.o grss.cpp

.obj/wr_fil.o: wr_fil.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/wr_fil.o wr_fil.cpp

.obj/init_fil.o: init_fil.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/init_fil.o init_fil.cpp

.obj/shell.o: shell.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/shell.o shell.cpp

.obj/prion.o: prion.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/prion.o prion.cpp

.obj/mpchs.o: mpchs.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mpchs.o mpchs.cpp

.obj/extern.o: extern.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/extern.o extern.cpp

.obj/polar.o: ../antenn/polar.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../splayn/spcub.h \
		../antenn/antenn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/polar.o ../antenn/polar.cpp

.obj/trant.o: ../antenn/trant.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/trant.o ../antenn/trant.cpp

.obj/si.o: ../antenn/si.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/si.o ../antenn/si.cpp

.obj/resist.o: ../antenn/resist.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/resist.o ../antenn/resist.cpp

.obj/rerth.o: ../antenn/rerth.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/rerth.o ../antenn/rerth.cpp

.obj/recant.o: ../antenn/recant.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/recant.o ../antenn/recant.cpp

.obj/rebeam.o: ../antenn/rebeam.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/rebeam.o ../antenn/rebeam.cpp

.obj/loop.o: ../antenn/loop.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/loop.o ../antenn/loop.cpp

.obj/get_ant.o: ../antenn/get_ant.cpp ../antenn/antenn.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/get_ant.o ../antenn/get_ant.cpp

.obj/fm.o: ../antenn/fm.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/fm.o ../antenn/fm.cpp

.obj/ci.o: ../antenn/ci.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ci.o ../antenn/ci.cpp

.obj/ellips.o: ../antenn/ellips.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ellips.o ../antenn/ellips.cpp

.obj/dipole.o: ../antenn/dipole.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/dipole.o ../antenn/dipole.cpp

.obj/bs.o: ../antenn/bs.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/bs.o ../antenn/bs.cpp

.obj/beam.o: ../antenn/beam.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/beam.o ../antenn/beam.cpp

.obj/eschar.o: ../iri_3d/eschar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/eschar.o ../iri_3d/eschar.cpp

.obj/iri_3d_new.o: ../iri_3d/iri_3d_new.cpp ../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/iri_3d_new.o ../iri_3d/iri_3d_new.cpp

.obj/spcub.o: ../splayn/spcub.cpp ../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/spcub.o ../splayn/spcub.cpp

.obj/progon.o: ../splayn/progon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/progon.o ../splayn/progon.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

