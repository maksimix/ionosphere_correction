#############################################################################
# Makefile for building: path0s
# Generated by qmake (1.07a) (Qt 3.3.8c) on: Thu Jan 12 15:15:33 2017
# Project:  paths0_u.pro
# Template: app
# Command: $(QMAKE) -o Makefile paths0_u.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DUSE_LIB64_PATHES -fno-strict-aliasing -Wall -W -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DUSE_LIB64_PATHES -fno-strict-aliasing  
CXXFLAGS = -pipe -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DUSE_LIB64_PATHES -fno-strict-aliasing -fopenmp -O0 -march=native -Wall -W -fmessage-length=0 -grecord-gcc-switches -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g -DUSE_LIB64_PATHES -fno-strict-aliasing  
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt3/mkspecs/default -I. -I/usr/include
LINK     = g++
LFLAGS   = -fopenmp -O0 -march=native
LIBS     = $(SUBLIBS) -L/usr/lib64/ ../iri2012/libiri2012.a -lgfortran
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = paths.h \
		../splayn/spcub.h \
		../trek/mytrek.h \
		../iri_3d/iri_3d_new.h
SOURCES = path0s.cpp \
		infils.cpp \
		inions.cpp \
		outtrs.cpp \
		sopr.cpp \
		moda.cpp \
		prion.cpp \
		extern.cpp \
		magfis.cpp \
		../trek/coords.cpp \
		../trek/coors.cpp \
		../trek/treks.cpp \
		../trek/funcs.cpp \
		../trek/soluts.cpp \
		../trek/ionos.cpp \
		../trek/ltv.cpp \
		../trek/mytrek.cpp \
		../splayn/spcub.cpp \
		../splayn/progon.cpp \
		../iri_3d/eschar.cpp \
		../iri_3d/iri_3d_new.cpp
OBJECTS = .obj/path0s.o \
		.obj/infils.o \
		.obj/inions.o \
		.obj/outtrs.o \
		.obj/sopr.o \
		.obj/moda.o \
		.obj/prion.o \
		.obj/extern.o \
		.obj/magfis.o \
		.obj/coords.o \
		.obj/coors.o \
		.obj/treks.o \
		.obj/funcs.o \
		.obj/soluts.o \
		.obj/ionos.o \
		.obj/ltv.o \
		.obj/mytrek.o \
		.obj/spcub.o \
		.obj/progon.o \
		.obj/eschar.o \
		.obj/iri_3d_new.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = paths0_u.pro
QMAKE_TARGET = path0s
DESTDIR  = 
TARGET   = path0s

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: paths0_u.pro  /usr/lib/qt3/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile paths0_u.pro
qmake: 
	@$(QMAKE) -o Makefile paths0_u.pro

dist: 
	@mkdir -p .obj/path0s && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/path0s/ && ( cd `dirname .obj/path0s` && $(TAR) path0s.tar path0s && $(GZIP) path0s.tar ) && $(MOVE) `dirname .obj/path0s`/path0s.tar.gz . && $(DEL_FILE) -r .obj/path0s

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/path0s.o: path0s.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/path0s.o path0s.cpp

.obj/infils.o: infils.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/infils.o infils.cpp

.obj/inions.o: inions.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/inions.o inions.cpp

.obj/outtrs.o: outtrs.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/outtrs.o outtrs.cpp

.obj/sopr.o: sopr.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/sopr.o sopr.cpp

.obj/moda.o: moda.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moda.o moda.cpp

.obj/prion.o: prion.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/prion.o prion.cpp

.obj/extern.o: extern.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/extern.o extern.cpp

.obj/magfis.o: magfis.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/magfis.o magfis.cpp

.obj/coords.o: ../trek/coords.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/coords.o ../trek/coords.cpp

.obj/coors.o: ../trek/coors.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/coors.o ../trek/coors.cpp

.obj/treks.o: ../trek/treks.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/treks.o ../trek/treks.cpp

.obj/funcs.o: ../trek/funcs.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/funcs.o ../trek/funcs.cpp

.obj/soluts.o: ../trek/soluts.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/soluts.o ../trek/soluts.cpp

.obj/ionos.o: ../trek/ionos.cpp paths.h \
		../iri_3d/iri_3d_new.h \
		../trek/mytrek.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ionos.o ../trek/ionos.cpp

.obj/ltv.o: ../trek/ltv.cpp ../trek/mytrek.h \
		../splayn/spcub.h \
		../iri_3d/iri_3d_new.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ltv.o ../trek/ltv.cpp

.obj/mytrek.o: ../trek/mytrek.cpp ../trek/mytrek.h \
		../splayn/spcub.h \
		../iri_3d/iri_3d_new.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/mytrek.o ../trek/mytrek.cpp

.obj/spcub.o: ../splayn/spcub.cpp ../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/spcub.o ../splayn/spcub.cpp

.obj/progon.o: ../splayn/progon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/progon.o ../splayn/progon.cpp

.obj/eschar.o: ../iri_3d/eschar.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/eschar.o ../iri_3d/eschar.cpp

.obj/iri_3d_new.o: ../iri_3d/iri_3d_new.cpp ../iri_3d/iri_3d_new.h \
		../splayn/spcub.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/iri_3d_new.o ../iri_3d/iri_3d_new.cpp

####### Install

install:  

uninstall:  

