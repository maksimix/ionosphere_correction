#include <math.h>
#include "paths.h"

void ssno(double fr,
          double tim,
          long   mes,
          double alat,
          double& eno,
          double& sno)
//****************************************************************
// ποδπςοηςννA πςοηξοϊιςοχAξιρ σοσςεδοτοώεξξωX πονεX χ δΒ ι ιX
// δισπεςσιι χ δβ
//      fr   - ςαβοώαρ ώαστοτα χ νηγ
//      tim  - νεστξοε χςενρ χ ςαδιαξαθ
//      mes  - ξονες νεσργα
//      alat - ηεοηςαζιώεσλαρ ϋιςοτα χ ςαδιαξαθ
//      eno  - ξαπςρφεξξοστψ πομρ σοσςεδοτοώεξξωθ πονεθ χ δβ
//      sno  - δισπεςσιρ σοσςεδοτοώεξξωθ πονεθ χ δβ
//****************************************************************
{
// λοόζζιγιεξτω αππςολσιναγιι (σεS - μετο, CEW - ϊινα, CS - δισπεςσιρ)
  double ces[2][5]={{-11.3287, 15.3878,  -3.9298,  -0.6586,  0.0147},
                    {12.6054,  9.6061,  -6.6732,   1.7714, -0.4551}},
         cew[2][5]={{-7.0752, 15.3295,  -2.7338,  -1.0623,  0.0656},
                    {17.7742,  6.9140,  -4.4969,   1.0968, -0.2703}},
         cs[2][5] ={{17.1084,  4.2225,  -3.2410,   1.0150, -0.1124},
                    {10.8118,  0.8916,   1.4638,   0.0428, -0.1252}};
  double dl,g,x,t1,t2,s1,s2,s3,dsol,ff2;
  long   id,i,mn,mn1;

  if (mod<8)
  {
      eno=-999.;
      sno=.0;
      return;
  }
  double t01=iri_3dbase->getTime()*3600.;
  double t02=iri_3dbase2->getTime()*3600.;
  double f01=iri_3dbase->getf0F2();
  double f02=iri_3dbase2->getf0F2();

//  dsol - σιξυσ σομξεώξοηο ϊεξιτξοηο υημα
        dsol=.398*sin(PI/6.*(mes-3.17));
//  ff2  - λςιτιώεσλαρ ώαστοτα σμορ F2 χ νηγ χ νεστε πςιενα
        ff2=(f02-f01)/(t02-t01)*(tim-t01)+f01;
//  χςενρ χοσθοδα ι ϊαθοδα σομξγα
        id=0;
        dl=asin(dsol);
        g=tan(alat)*tan(dl);
// G >  1.0 πομρςξωκ δεξψ
// G < -1.0 πομρςξαρ ξοώψ
        if (g<1.0)
          if (g<=-1.0)
//  σομξγε ξε χσθοδιτ ξαδ ηοςιϊοξτον
            id=1;
          else
            {
              t1=acos(g);
//  χςενρ ϊαθοδα σομξγα
              t2=PI2-t1;
//  χςενρ χοσθοδα +1 ώασ
              t1 +=PI/12.;
              if (tim<t1 || tim>t2)
                id=1;
            }
        x=fr/ff2;
        s1=ces[id][4];
        s2=cew[id][4];
        s3=cs[id][4];
        for(i=0; i<4; i++)
          {
            s1=s1*x+ces[id][3-i];
            s2=s2*x+cew[id][3-i];
            s3=s3*x+cs[id][3-i];
          }
// οπςεδεμεξιε σεϊοξα (1-ϊινα, 2-ςαχξοδεξστχιε, 3-μετο)
        mn=mes/3+1-4*(mes/12);
        mn1=mn-2*(mn/4);
        sno=s3;
        switch (mn1)
          {
            case 1:
// ϊινα
                   eno=s2;
                   break;
// ςαχξοδεξστχιε
            case 2:
                   eno=.5*(s1+s2);
                   break;
// μετο
            case 3:
                   eno=s1;
                   break;
          }
}
